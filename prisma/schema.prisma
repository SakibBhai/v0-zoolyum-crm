// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String
  description        String?
  clientId           String?              @map("client_id") @db.Uuid
  status             String?              @default("planning")
  startDate          DateTime?            @map("start_date") @db.Date
  endDate            DateTime?            @map("end_date") @db.Date
  budget             Decimal?             @db.Decimal(10, 2)
  teamMembers        Json?                @default("[]") @map("team_members") @db.JsonB
  isRecurring        Boolean              @default(false) @map("is_recurring")
  frequency          String?
  recurrenceEnd      DateTime?            @map("recurrence_end") @db.Date
  recurrencePattern  Json?                @map("recurrence_pattern") @db.JsonB
  versionHistoryId   String?              @map("version_history_id") @db.Uuid
  lastModified       DateTime             @default(now()) @map("last_modified") @db.Timestamptz
  createdAt          DateTime             @default(now()) @map("created_at") @db.Timestamptz
  updatedAt          DateTime             @default(now()) @map("updated_at") @db.Timestamptz
  client             Client?              @relation(fields: [clientId], references: [id])
  versionHistory     ProjectVersionHistory[] @relation("ProjectToVersionHistory")

  @@map("projects")
}

model ProjectVersionHistory {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  projectId      String   @map("project_id") @db.Uuid
  changedFields  Json     @map("changed_fields") @db.JsonB
  previousValues Json     @map("previous_values") @db.JsonB
  changedBy      String   @map("changed_by")
  timestamp      DateTime @default(now()) @db.Timestamptz
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamptz
  project        Project  @relation("ProjectToVersionHistory", fields: [projectId], references: [id], onDelete: Cascade)

  @@index([projectId], name: "idx_project_version_history_project_id")
  @@map("project_version_history")
}

model Client {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  industry    String?
  contactName String?   @map("contact_name")
  email       String?
  phone       String?
  status      String?   @default("active")
  notes       String?
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt   DateTime  @default(now()) @map("updated_at") @db.Timestamptz
  projects    Project[]

  @@map("clients")
}

model Lead {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName        String     @map("first_name")
  lastName         String     @map("last_name")
  email            String
  phone            String?
  company          String?
  position         String?
  source           String
  status           String     @default("new")
  assignedTo       String?    @map("assigned_to")
  value            Decimal    @default(0) @db.Decimal(10, 2)
  notes            String?
  tags             Json       @default("[]") @db.JsonB
  location         String?
  industry         String?
  leadScore        Int        @default(0) @map("lead_score")
  lastContactDate  DateTime?  @map("last_contact_date") @db.Timestamptz
  nextFollowUp     DateTime?  @map("next_follow_up") @db.Timestamptz
  createdAt        DateTime   @default(now()) @map("created_at") @db.Timestamptz
  updatedAt        DateTime   @default(now()) @map("updated_at") @db.Timestamptz
  activities       Activity[]

  @@index([status], name: "idx_leads_status")
  @@index([assignedTo], name: "idx_leads_assigned_to")
  @@index([source], name: "idx_leads_source")
  @@index([createdAt], name: "idx_leads_created_at")
  @@map("leads")
}

model Activity {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  leadId      String   @map("lead_id") @db.Uuid
  type        String
  subject     String
  description String?
  date        DateTime @db.Timestamptz
  duration    Int?     // in minutes
  outcome     String?
  nextAction  String?  @map("next_action")
  createdBy   String   @map("created_by")
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt   DateTime @default(now()) @map("updated_at") @db.Timestamptz
  lead        Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)

  @@index([leadId], name: "idx_activities_lead_id")
  @@index([type], name: "idx_activities_type")
  @@index([date], name: "idx_activities_date")
  @@map("activities")
}